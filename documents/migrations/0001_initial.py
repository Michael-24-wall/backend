# Generated by Django 5.2.7 on 2025-10-26 13:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_review', 'Pending Review'), ('pending_approval', 'Pending Approval'), ('pending_final_signature', 'Pending Final Signature'), ('signed', 'Signed/Final'), ('archived', 'Archived'), ('rejected', 'Rejected')], default='draft', max_length=50)),
                ('final_content', models.TextField(blank=True, help_text='The rendered HTML content of the document instance.', null=True)),
                ('file_attachment', models.FileField(blank=True, help_text='The final PDF or file representation.', null=True, upload_to='documents/%Y/%m/')),
                ('file_description', models.TextField(blank=True, help_text='Description of the attached file')),
                ('file_size', models.BigIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=1)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_authored_documents', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_documents', to='core.organization')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=False, help_text='Internal comment (not visible to external parties)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_comments', to='documents.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_document_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Comment',
                'verbose_name_plural': 'Document Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_sessions', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_sessions', to='documents.document')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Template name (e.g., 'Employment Contract')", max_length=255)),
                ('title', models.CharField(blank=True, help_text='Display title (optional)', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Template description and usage notes')),
                ('content', models.TextField(help_text='HTML/Markdown content with placeholders (e.g., {{user.first_name}}).')),
                ('content_template', models.TextField(blank=True, help_text="Legacy field - use 'content' instead.")),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents_created_templates', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(help_text='The organization this template belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='documents_templates', to='core.organization')),
            ],
            options={
                'verbose_name': 'Document Template',
                'ordering': ['name'],
                'unique_together': {('organization', 'name')},
            },
        ),
        migrations.AddField(
            model_name='document',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents_documents', to='documents.documenttemplate'),
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.IntegerField()),
                ('content', models.TextField()),
                ('changes', models.TextField(blank=True, help_text='Description of changes in this version')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_created_versions', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_versions', to='documents.document')),
            ],
            options={
                'verbose_name': 'Document Version',
                'verbose_name_plural': 'Document Versions',
                'ordering': ['document', '-version_number'],
            },
        ),
        migrations.CreateModel(
            name='OperationalTransform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('operation', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('applied_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_operations', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_operations', to='documents.documentsession')),
            ],
            options={
                'ordering': ['session', 'version'],
            },
        ),
        migrations.CreateModel(
            name='DigitalSignatureLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signed_at', models.DateTimeField(auto_now_add=True)),
                ('signer_role', models.CharField(max_length=50)),
                ('signature_data', models.TextField(blank=True, help_text='Encrypted signature data or hash')),
                ('signing_reason', models.CharField(blank=True, help_text='Reason for signing', max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of signer', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Browser/user agent information')),
                ('content_hash', models.CharField(blank=True, help_text="SHA256 hash of the document's content at the time of signing.", max_length=64, null=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('invalidated_at', models.DateTimeField(blank=True, null=True)),
                ('invalidated_reason', models.TextField(blank=True)),
                ('signer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents_document_signatures', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_signatures', to='documents.document')),
            ],
            options={
                'verbose_name': 'Digital Signature Log',
                'verbose_name_plural': 'Digital Signature Logs',
                'ordering': ['-signed_at'],
                'unique_together': {('document', 'signer')},
            },
        ),
        migrations.CreateModel(
            name='DocumentPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, choices=[('owner', 'Owner'), ('ceo', 'CEO'), ('manager', 'Manager'), ('assistant_manager', 'Assistant Manager'), ('accountant', 'Accountant'), ('hr', 'HR'), ('administrator', 'Administrator'), ('staff', 'Staff'), ('contributor', 'Contributor'), ('individual', 'Individual')], max_length=50, null=True)),
                ('permission_type', models.CharField(choices=[('view', 'Can View'), ('comment', 'Can Comment'), ('edit', 'Can Edit'), ('sign', 'Can Sign')], max_length=10)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_permissions', to='documents.document')),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Permission',
                'verbose_name_plural': 'Document Permissions',
                'unique_together': {('document', 'user', 'permission_type')},
            },
        ),
        migrations.CreateModel(
            name='CollaborationCursor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=0)),
                ('selection_range', models.JSONField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_cursors', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_cursors', to='documents.documentsession')),
            ],
            options={
                'unique_together': {('session', 'user')},
            },
        ),
        migrations.CreateModel(
            name='DocumentShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_token', models.CharField(default=uuid.uuid4, help_text='Unique token for external sharing', max_length=64, unique=True)),
                ('shared_with_email', models.EmailField(blank=True, help_text='Email of person document is shared with', max_length=254)),
                ('permission_type', models.CharField(choices=[('view', 'Can View'), ('comment', 'Can Comment'), ('edit', 'Can Edit'), ('sign', 'Can Sign')], default='view', max_length=10)),
                ('expires_at', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accessed_at', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.IntegerField(default=0)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_shares', to='documents.document')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_shared_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Share',
                'verbose_name_plural': 'Document Shares',
                'indexes': [models.Index(fields=['share_token'], name='documents_d_share_t_57bd35_idx'), models.Index(fields=['expires_at'], name='documents_d_expires_4b27d0_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['organization', 'status'], name='documents_d_organiz_b8cccc_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['organization', 'created_by'], name='documents_d_organiz_512e3c_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['organization', 'template'], name='documents_d_organiz_c170c0_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['status'], name='documents_d_status_07369e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentversion',
            unique_together={('document', 'version_number')},
        ),
        migrations.AlterUniqueTogether(
            name='operationaltransform',
            unique_together={('session', 'version')},
        ),
    ]
