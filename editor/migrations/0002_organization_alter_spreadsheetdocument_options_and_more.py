# Generated by Django 5.2.7 on 2025-10-21 16:42

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('editor', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='organization name')),
                ('slug', models.SlugField(unique=True, verbose_name='organization slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan_type', models.CharField(choices=[('free', 'Free'), ('pro', 'Professional'), ('enterprise', 'Enterprise')], default='free', max_length=50, verbose_name='plan type')),
                ('storage_limit_mb', models.IntegerField(default=1024, verbose_name='storage limit (MB)')),
            ],
            options={
                'verbose_name': 'organization',
                'verbose_name_plural': 'organizations',
                'db_table': 'editor_organizations',
            },
        ),
        migrations.AlterModelOptions(
            name='spreadsheetdocument',
            options={'ordering': ['-updated_at'], 'verbose_name': 'spreadsheet document', 'verbose_name_plural': 'spreadsheet documents'},
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='allow_comments',
            field=models.BooleanField(default=True, verbose_name='allow comments'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='complexity_score',
            field=models.FloatField(default=0.0, help_text='Calculated complexity of the spreadsheet', verbose_name='complexity score'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='description',
            field=models.TextField(blank=True, help_text='Optional document description', null=True, verbose_name='description'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='document_type',
            field=models.CharField(choices=[('spreadsheet', 'Spreadsheet'), ('budget', 'Budget'), ('inventory', 'Inventory'), ('report', 'Report'), ('template', 'Template'), ('custom', 'Custom')], default='spreadsheet', max_length=50, verbose_name='document type'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='is_archived',
            field=models.BooleanField(db_index=True, default=False, verbose_name='is archived'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Whether this document is publicly accessible', verbose_name='is public'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='is_template',
            field=models.BooleanField(default=False, help_text='Whether this document is a template', verbose_name='is template'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='last_accessed_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='last accessed at'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_spreadsheets', to=settings.AUTH_USER_MODEL, verbose_name='last modified by'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Additional custom metadata', verbose_name='metadata'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, help_text='Search vector for full-text search', null=True),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='size',
            field=models.IntegerField(default=0, help_text='Size of editor_data in bytes', verbose_name='data size'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('archived', 'Archived'), ('locked', 'Locked'), ('deleted', 'Deleted')], default='draft', max_length=20, verbose_name='status'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='template_source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_documents', to='editor.spreadsheetdocument', verbose_name='template source'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='unique identifier'),
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='view_count',
            field=models.IntegerField(default=0, verbose_name='view count'),
        ),
        migrations.AlterField(
            model_name='spreadsheetdocument',
            name='created_at',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='created at'),
        ),
        migrations.AlterField(
            model_name='spreadsheetdocument',
            name='editor_data',
            field=models.JSONField(blank=True, default=dict, help_text='Complete JSON state of the spreadsheet editor', verbose_name='editor data'),
        ),
        migrations.AlterField(
            model_name='spreadsheetdocument',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_spreadsheets', to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AlterField(
            model_name='spreadsheetdocument',
            name='title',
            field=models.CharField(help_text='Name of the spreadsheet document', max_length=255, verbose_name='document title'),
        ),
        migrations.AlterField(
            model_name='spreadsheetdocument',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at'),
        ),
        migrations.AlterModelTable(
            name='spreadsheetdocument',
            table='spreadsheet_documents',
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('renamed', 'Renamed'), ('shared', 'Shared'), ('versioned', 'Versioned'), ('restored', 'Restored'), ('exported', 'Exported')], max_length=50, verbose_name='action')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp')),
                ('details', models.JSONField(default=dict, verbose_name='details')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='user agent')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='editor.spreadsheetdocument')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'audit log',
                'verbose_name_plural': 'audit logs',
                'db_table': 'audit_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DocumentAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('view', 'View'), ('edit', 'Edit'), ('download', 'Download'), ('print', 'Print')], max_length=20, verbose_name='access type')),
                ('accessed_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='accessed at')),
                ('session_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='session ID')),
                ('duration_seconds', models.IntegerField(blank=True, null=True, verbose_name='duration seconds')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='editor.spreadsheetdocument')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'document access log',
                'verbose_name_plural': 'document access logs',
                'db_table': 'document_access_logs',
            },
        ),
        migrations.CreateModel(
            name='DocumentCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_level', models.CharField(choices=[('view', 'Can View'), ('comment', 'Can Comment'), ('edit', 'Can Edit'), ('manage', 'Can Manage'), ('owner', 'Owner')], default='view', max_length=20, verbose_name='permission level')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editor_added_collaborators', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_collaborators', to='editor.spreadsheetdocument')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editor_document_collaborations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'document collaborator',
                'verbose_name_plural': 'document collaborators',
                'db_table': 'document_collaborators',
            },
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='collaborators',
            field=models.ManyToManyField(related_name='collaborative_spreadsheets', through='editor.DocumentCollaborator', through_fields=('document', 'user'), to=settings.AUTH_USER_MODEL, verbose_name='collaborators'),
        ),
        migrations.CreateModel(
            name='DocumentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='content')),
                ('cell_reference', models.CharField(blank=True, help_text='Cell reference if comment is tied to a specific cell', max_length=20, null=True, verbose_name='cell reference')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='is resolved')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='editor.spreadsheetdocument')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='editor.documentcomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'document comment',
                'verbose_name_plural': 'document comments',
                'db_table': 'document_comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.IntegerField(verbose_name='version number')),
                ('version_data', models.JSONField(verbose_name='version data')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('change_description', models.TextField(blank=True, null=True, verbose_name='change description')),
                ('checksum', models.CharField(max_length=32, verbose_name='checksum')),
                ('data_size', models.IntegerField(default=0, verbose_name='data size')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_versions', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='editor.spreadsheetdocument')),
            ],
            options={
                'verbose_name': 'document version',
                'verbose_name_plural': 'document versions',
                'db_table': 'document_versions',
                'ordering': ['document', '-version_number'],
            },
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spreadsheets', to='editor.organization', verbose_name='organization'),
        ),
        migrations.CreateModel(
            name='OrganizationMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', 'Member'), ('admin', 'Admin'), ('owner', 'Owner')], default='member', max_length=50)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editor_memberships', to='editor.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editor_organization_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'organization membership',
                'verbose_name_plural': 'organization memberships',
                'db_table': 'editor_organization_memberships',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='active_users',
            field=models.ManyToManyField(related_name='editor_organizations', through='editor.OrganizationMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='tag name')),
                ('color', models.CharField(default='#6B7280', max_length=7, verbose_name='tag color')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tags', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='editor.organization')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
                'db_table': 'editor_tags',
            },
        ),
        migrations.AddField(
            model_name='spreadsheetdocument',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='spreadsheets', to='editor.tag', verbose_name='tags'),
        ),
        migrations.AddIndex(
            model_name='spreadsheetdocument',
            index=models.Index(fields=['owner', 'created_at'], name='spreadsheet_owner_i_22e9ba_idx'),
        ),
        migrations.AddIndex(
            model_name='spreadsheetdocument',
            index=models.Index(fields=['organization', 'status'], name='spreadsheet_organiz_927954_idx'),
        ),
        migrations.AddIndex(
            model_name='spreadsheetdocument',
            index=models.Index(fields=['is_archived', 'document_type'], name='spreadsheet_is_arch_ee270d_idx'),
        ),
        migrations.AddIndex(
            model_name='spreadsheetdocument',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='spreadsheet_search__3aa9ea_gin'),
        ),
        migrations.AddIndex(
            model_name='spreadsheetdocument',
            index=models.Index(fields=['updated_at'], name='spreadsheet_updated_0a43e8_idx'),
        ),
        migrations.AddIndex(
            model_name='spreadsheetdocument',
            index=models.Index(fields=['last_accessed_at'], name='spreadsheet_last_ac_c792e3_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['document', 'timestamp'], name='audit_logs_documen_4009f3_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'timestamp'], name='audit_logs_user_id_88267f_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action', 'timestamp'], name='audit_logs_action_474804_idx'),
        ),
        migrations.AddIndex(
            model_name='documentaccesslog',
            index=models.Index(fields=['document', 'accessed_at'], name='document_ac_documen_b365a5_idx'),
        ),
        migrations.AddIndex(
            model_name='documentaccesslog',
            index=models.Index(fields=['user', 'accessed_at'], name='document_ac_user_id_509fd5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentcollaborator',
            unique_together={('document', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='documentversion',
            unique_together={('document', 'version_number')},
        ),
        migrations.AlterUniqueTogether(
            name='organizationmembership',
            unique_together={('user', 'organization')},
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('name', 'organization')},
        ),
    ]
